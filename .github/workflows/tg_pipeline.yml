name: "pr-checks"

on: [push, pull_request]

env:
  tf_version: "1.5.7"
  tg_version: "0.53.7"
  working_dir: "."
  TRACE: "1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "us-east-1"
  GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
    #   - name: Configure SSH keys
    #     run: |
    #       mkdir -p ~/.ssh/
    #       echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    #       chmod 600 ~/.ssh/id_rsa
    #       echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts

      # - uses: actions/checkout@v3
      # # Make sure the @v0.8.0 matches the current version of the action
      # - uses: webfactory/ssh-agent@v0.8.0
      #   with:
      #       ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: Add SSH Go Module Private Key
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "$SSH_PRIVATE_KEY"
          echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
          # ssh -vT git@github.com

      - name: Setup access for private go modules
        run: |
                  git config --global url."ssh://git@github.com/".insteadOf https://github.com/

      - name: Run checks
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "hclfmt --terragrunt-check --terragrunt-diff"
          tg_comment: "0"
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}

      - name: Initialize Terraform
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: init
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}

      - name: Run plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "run-all plan"
          tg_comment: "1"
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}
